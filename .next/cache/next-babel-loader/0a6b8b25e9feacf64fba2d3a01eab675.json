{"ast":null,"code":"var _jsxFileName = \"E:\\\\hello-next\\\\pages\\\\blogs.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport Head from \"next/head\";\nimport Layout from \"../components/Layouts\";\nimport fetch from \"isomorphic-fetch\";\nimport Error from \"./_error\";\n\nconst Blogs = ({\n  data\n}) => {\n  if (data.length === 0) {\n    return __jsx(Error, {\n      message: \"Could not load blogs, Please try later\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return __jsx(Layout, {\n    mainTitle: \"Our Recent Blogs\",\n    footer: `Copyright ${new Date().getFullYear()}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, \"Blogs page\")), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"Blogs\"), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }), data.map((b, i) => __jsx(Link, {\n    as: `/blog/${b.id}`,\n    href: `/blogs/?id=${b.id}`,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, b.title))));\n};\n\nBlogs.getInitialProps = async () => {\n  let data;\n\n  try {\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n    data = await res.json();\n    console.log(\"Number of blogs: \", data.length);\n  } catch (err) {\n    console.log(\"ERROR\", err);\n    data = [];\n  }\n\n  return {\n    data\n  };\n};\n\nexport default Blogs;","map":{"version":3,"sources":["E:/hello-next/pages/blogs.js"],"names":["Link","Head","Layout","fetch","Error","Blogs","data","length","Date","getFullYear","map","b","i","id","title","getInitialProps","res","json","console","log","err"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AACA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACxB,MAAIA,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;AACnB,WAAO,MAAC,KAAD;AAAO,MAAA,OAAO,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACD,SACI,MAAC,MAAD;AACI,IAAA,SAAS,EAAC,kBADd;AAEI,IAAA,MAAM,EAAG,aAAY,IAAIC,IAAJ,GAAWC,WAAX,EAAyB,EAFlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAJJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAYKH,IAAI,CAACI,GAAL,CAAS,CAACC,CAAD,EAAIC,CAAJ,KACN,MAAC,IAAD;AAAM,IAAA,EAAE,EAAG,SAAQD,CAAC,CAACE,EAAG,EAAxB;AAA2B,IAAA,IAAI,EAAG,cAAaF,CAAC,CAACE,EAAG,EAApD;AAAuD,IAAA,GAAG,EAAED,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,CAAC,CAACG,KAAP,CADJ,CADH,CAZL,CADJ;AAoBH,CAxBD;;AA0BAT,KAAK,CAACU,eAAN,GAAwB,YAAY;AAChC,MAAIT,IAAJ;;AACA,MAAI;AACA,UAAMU,GAAG,GAAG,MAAMb,KAAK,CAAC,4CAAD,CAAvB;AACAG,IAAAA,IAAI,GAAG,MAAMU,GAAG,CAACC,IAAJ,EAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCb,IAAI,CAACC,MAAtC;AACH,GAJD,CAIE,OAAOa,GAAP,EAAY;AACVF,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,GAArB;AACAd,IAAAA,IAAI,GAAG,EAAP;AACH;;AACD,SAAO;AACHA,IAAAA;AADG,GAAP;AAGH,CAbD;;AAeA,eAAeD,KAAf","sourcesContent":["import Link from \"next/link\";\r\nimport Head from \"next/head\";\r\nimport Layout from \"../components/Layouts\";\r\nimport fetch from \"isomorphic-fetch\";\r\nimport Error from \"./_error\";\r\nconst Blogs = ({ data }) => {\r\n    if (data.length === 0) {\r\n        return <Error message=\"Could not load blogs, Please try later\" />;\r\n    }\r\n    return (\r\n        <Layout\r\n            mainTitle=\"Our Recent Blogs\"\r\n            footer={`Copyright ${new Date().getFullYear()}`}\r\n        >\r\n            <Head>\r\n                <title>Blogs page</title>\r\n            </Head>\r\n\r\n            <h2>Blogs</h2>\r\n\r\n            <hr />\r\n\r\n            {data.map((b, i) => (\r\n                <Link as={`/blog/${b.id}`} href={`/blogs/?id=${b.id}`} key={i}>\r\n                    <h4>{b.title}</h4>\r\n                </Link>\r\n            ))}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nBlogs.getInitialProps = async () => {\r\n    let data;\r\n    try {\r\n        const res = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\r\n        data = await res.json();\r\n        console.log(\"Number of blogs: \", data.length);\r\n    } catch (err) {\r\n        console.log(\"ERROR\", err);\r\n        data = [];\r\n    }\r\n    return {\r\n        data\r\n    };\r\n};\r\n\r\nexport default Blogs;"]},"metadata":{},"sourceType":"module"}